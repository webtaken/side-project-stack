// This file is auto-generated by @hey-api/openapi-ts

export const $JWT = {
    type: 'object',
    description: 'Serializer for JWT authentication.',
    properties: {
        access: {
            type: 'string'
        },
        refresh: {
            type: 'string'
        },
        user: {
            '$ref': '#/components/schemas/UserDetails'
        }
    },
    required: ['access', 'refresh', 'user']
} as const;

export const $Login = {
    type: 'object',
    properties: {
        username: {
            type: 'string'
        },
        email: {
            type: 'string',
            format: 'email'
        },
        password: {
            type: 'string'
        }
    },
    required: ['password']
} as const;

export const $PatchedUserDetails = {
    type: 'object',
    description: 'User model w/o password',
    properties: {
        pk: {
            type: 'integer',
            readOnly: true,
            title: 'ID'
        },
        username: {
            type: 'string',
            description: 'Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
            pattern: '^[\\w.@+-]+$',
            maxLength: 150
        },
        email: {
            type: 'string',
            format: 'email',
            readOnly: true,
            title: 'Email address'
        },
        first_name: {
            type: 'string',
            maxLength: 150
        },
        last_name: {
            type: 'string',
            maxLength: 150
        }
    }
} as const;

export const $Register = {
    type: 'object',
    properties: {
        username: {
            type: 'string',
            maxLength: 150,
            minLength: 1
        },
        email: {
            type: 'string',
            format: 'email'
        },
        password1: {
            type: 'string',
            writeOnly: true
        },
        password2: {
            type: 'string',
            writeOnly: true
        }
    },
    required: ['email', 'password1', 'password2', 'username']
} as const;

export const $RestAuthDetail = {
    type: 'object',
    properties: {
        detail: {
            type: 'string',
            readOnly: true
        }
    },
    required: ['detail']
} as const;

export const $SocialLogin = {
    type: 'object',
    properties: {
        access_token: {
            type: 'string'
        },
        code: {
            type: 'string'
        },
        id_token: {
            type: 'string'
        }
    }
} as const;

export const $TokenRefresh = {
    type: 'object',
    properties: {
        access: {
            type: 'string',
            readOnly: true
        },
        refresh: {
            type: 'string',
            writeOnly: true
        }
    },
    required: ['access', 'refresh']
} as const;

export const $TokenVerify = {
    type: 'object',
    properties: {
        token: {
            type: 'string',
            writeOnly: true
        }
    },
    required: ['token']
} as const;

export const $UserDetails = {
    type: 'object',
    description: 'User model w/o password',
    properties: {
        pk: {
            type: 'integer',
            readOnly: true,
            title: 'ID'
        },
        username: {
            type: 'string',
            description: 'Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
            pattern: '^[\\w.@+-]+$',
            maxLength: 150
        },
        email: {
            type: 'string',
            format: 'email',
            readOnly: true,
            title: 'Email address'
        },
        first_name: {
            type: 'string',
            maxLength: 150
        },
        last_name: {
            type: 'string',
            maxLength: 150
        }
    },
    required: ['email', 'pk', 'username']
} as const;

export const $VerifyEmail = {
    type: 'object',
    properties: {
        key: {
            type: 'string',
            writeOnly: true
        }
    },
    required: ['key']
} as const;